import "./Dashboard.css";
import "./../index.css";
import { useEffect, useState } from "react";
import {
  getUserChats,
  getUserMessages,
  startNewChatFromAudio,
} from "../services/firestore";
import { useAuth } from "../services/AuthContext";

function Dashboard() {
  const [isCollapsed, setIsCollapsed] = useState(false);
  const [chats, setChats] = useState(null);
  const [currentChat, setCurrentChat] = useState(null);
  const [currentChatUid, setCurrentChatUid] = useState("");
  const { currentUser } = useAuth();

  const [selectedFile, setSelectedFile] = useState(null);

  const handleFileChange = (event) => {
    setSelectedFile(event.target.files[0]);
  };

  const sendAudio = async () => {
    if (selectedFile.type === "audio/mpeg") {
      await startNewChatFromAudio(currentUser.uid, selectedFile, updateChats);
    }
  };

  //   These functions are generated by Gemini, they have no use

  //   const handleStartRecording = () => {
  //     // Implement recording logic here
  //     console.log("Start recording clicked");
  //   };

  //   const handleUpload = () => {
  //     // Implement upload logic here, using the selectedFile
  //     if (selectedFile) {
  //       console.log("Uploading file:", selectedFile);
  //       // You can use fetch, axios, or Firebase Storage to upload the file
  //     } else {
  //       console.log("No file selected");
  //     }
  //   };

  const updateChats = () => {
    getUserChats(currentUser.uid).then((data) => {
      console.log(data);
      setChats(data);
    });
  };

  useEffect(() => {
    updateChats();
  }, []);

  useEffect(() => {
    if (currentChatUid != "") {
      getUserMessages(currentUser.uid, currentChatUid).then((data) => {
        console.log("Messages");
        console.log(data);
        setCurrentChat(data);
      });
    } else {
      setCurrentChat(null);
    }
  }, [currentChatUid]);

  const toggleSidebar = () => {
    setIsCollapsed(!isCollapsed);
  };

  return (
    <div className="dashboard">
      <aside className={`dashboard-sidebar ${isCollapsed ? "collapsed" : ""}`}>
        <div className="sidebar-header">
          <div className="menu-icon" onClick={toggleSidebar}>
            ☰
          </div>
        </div>

        <div
          className="new-chat"
          onClick={() => {
            setCurrentChatUid("");
          }}
        >
          <div className="new-chat-icon">+</div>
          {!isCollapsed && <span>New chat</span>}
        </div>

        {isCollapsed ? (
          <></>
        ) : chats != null ? (
          <>
            <div className="sidebar-section">
              <div className="section-title">Recent</div>
              <ul className="section-list">
                {chats.map((chat) => {
                  console.log(chat);
                  return (
                    <li
                      className="list-item"
                      onClick={() => {
                        setCurrentChatUid(chat.docId);
                      }}
                    >
                      <span>{chat.name}</span>
                    </li>
                  );
                })}
              </ul>
            </div>
          </>
        ) : (
          <div>Loading</div>
        )}
      </aside>
      <div className="dashboard-main">
        {currentChat ? (
          currentChat.map((message) => {
            return <div>{message.content}</div>;
          })
        ) : (
          <div className="dashboard-content">
            <div className="input-section">
              <input
                type="file"
                accept="audio/*, application/pdf"
                onChange={handleFileChange}
              />
            </div>
            <div className="button-section">
              <button>Start recording</button>
              <button>Upload</button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default Dashboard;

{
  /* <>
          <div className="sidebar-section">
            <div className="section-title">Recent</div>
            <ul className="section-list">
              <li className="list-item active">
                <div className="list-icon">☰</div>
                <span>React TypeScript front-end h...</span>
              </li>
              <li className="list-item">
                <div className="list-icon">☰</div>
                <span>React Router TypeScript Guide</span>
              </li>
              <li className="list-item">
                <div className="list-icon">☰</div>
                <span>Generate a background that is...</span>
              </li>
              <li className="list-item">
                <div className="list-icon">☰</div>
                <span>React Startup Home Page</span>
              </li>
              <li className="list-item">
                <div className="list-icon">☰</div>
                <span>Integral Convergence Compari...</span>
              </li>
              <li className="list-item more">
                <div className="list-icon">▼</div>
                <span>More</span>
              </li>
            </ul>
          </div>

          <div className="sidebar-section">
            <div className="section-title">Gems</div>
            <ul className="section-list">
              <li className="list-item">
                <div className="list-icon gem-icon">
                  <span role="img" aria-label="gem">
                    &#x1F48E;
                  </span>
                </div>
                <span>Chess champ</span>
              </li>
              <li className="list-item">
                <div className="list-icon gem-icon">
                  <span role="img" aria-label="gem">
                    &#x1F48E;
                  </span>
                </div>
                <span>Brainstormer</span>
              </li>
              <li className="list-item">
                <div className="list-icon gem-icon">
                  <span role="img" aria-label="gem">
                    &#x1F48E;
                  </span>
                </div>
                <span>Career guide</span>
              </li>
              <li className="list-item more">
                <div className="list-icon">▼</div>
                <span>More</span>
              </li>
            </ul>
          </div>

          <div className="sidebar-footer">
            <ul className="footer-list">
              <li className="footer-item">
                <div className="footer-icon">
                  <span role="img" aria-label="gem">
                    &#x1F48E;
                  </span>
                </div>
                <span>Gem manager</span>
              </li>
              <li className="footer-item">
                <div className="footer-icon">
                  <span role="img" aria-label="help">
                    &#x2753;
                  </span>
                </div>
                <span>Help</span>
              </li>
              <li className="footer-item">
                <div className="footer-icon">
                  <span role="img" aria-label="activity">
                    &#x1F3C3;
                  </span>
                </div>
                <span>Activity</span>
                <div className="notification-dot"></div>
              </li>
              <li className="footer-item">
                <div className="footer-icon">
                  <span role="img" aria-label="settings">
                    &#x2699;
                  </span>
                </div>
                <span>Settings</span>
                <div className="notification-dot"></div>
              </li>
            </ul>
            <div className="location">
              <span role="img" aria-label="location">
                &#x1F535;
              </span>
              <span>Toronto, ON, Canada</span>
              <span className="update-location">Update location</span>
            </div>
          </div>
        </> */
}
